version: '3'

volumes:
  postgres_data:
  staticfiles_prod:

services:
  nginx:
    build:
      context: ./
      dockerfile: deploy/nginx/Dockerfile
    restart: always
    volumes:
      - staticfiles_prod:/staticfiles/
    ports:
      - 80:80
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=karim,environment=production
    depends_on:
      - django

  django:
    build:
      context: ./
      dockerfile: deploy/python/django/Dockerfile
    command: python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - staticfiles_prod:/app/src/staticfiles/
    env_file:
      - ./.env
    expose:
      - 8000
    depends_on:
      - postgres
      - redis

  celery-beat:
    build:
      context: ./
      dockerfile: deploy/python/celery/Dockerfile
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    command: celery -A myfoods beat -l info
    ports: []

  postgres:
    image: postgres:12.7-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - 5432:5432

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379

  flower:
    image: mher/flower:0.9.7
    env_file:
      - ./.env
    ports:
      - 5555:5555

  grafana:
    image: grafana/grafana:7.2.2
    container_name: grafana
    volumes:
      - ./deploy/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.0.0
    container_name: loki
    volumes:
      - ./deploy/loki/config.yaml:/etc/config/loki.yaml
    entrypoint:  # todo refactor
      - /usr/bin/loki
      - -config.file=/etc/config/loki.yaml
    ports:
      - "3100:3100"
